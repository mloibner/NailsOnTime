{"ast":null,"code":"import _slicedToArray from \"/Users/moniqueloibner/Documents/BootCamp/Homework/nails-on-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/moniqueloibner/Documents/BootCamp/Homework/nails-on-time/client/src/components/Calendar/index.js\";\n// import React, { Component } from 'react';\n// import Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport \"../style.css\"; //Package documentation found here https://www.npmjs.com/package/react-calendar\n// class MyApp extends Component {\n//   state = {\n//     date: new Date(),\n//   }\n//   onChange = date => this.setState({ date })\n//   render() {\n//     return (\n//       <div className=\"calDiv\">\n//         <Calendar \n//           onChange={this.onChange}\n//           value={this.state.date}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default MyApp\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nvar disabledDates = [tomorrow, in3Days, in5Days];\n\nfunction tileDisabled(_ref) {\n  var date = _ref.date,\n      view = _ref.view;\n\n  // Disable tiles in month view only\n  if (view === 'month') {\n    // Check if a date React-Calendar wants to check is on the list of disabled dates\n    return disabledDates.find(function (dDate) {\n      return isSameDay(dDate, date);\n    });\n  }\n}\n\nfunction MyApp() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Calendar, {\n    onChange: onChange,\n    value: date,\n    tileDisabled: tileDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/moniqueloibner/Documents/BootCamp/Homework/nails-on-time/client/src/components/Calendar/index.js"],"names":["React","useState","Calendar","disabledDates","tomorrow","in3Days","in5Days","tileDisabled","date","view","find","dDate","isSameDay","MyApp","Date","value","setValue","onChange"],"mappings":";;AAAA;AACA;AACA,OAAO,kCAAP;AACA,OAAO,cAAP,C,CAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,OAApB,CAAtB;;AAEA,SAASC,YAAT,OAAsC;AAAA,MAAdC,IAAc,QAAdA,IAAc;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AACpC;AACA,MAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB;AACA,WAAON,aAAa,CAACO,IAAd,CAAmB,UAAAC,KAAK;AAAA,aAAIC,SAAS,CAACD,KAAD,EAAQH,IAAR,CAAb;AAAA,KAAxB,CAAP;AACD;AACF;;AAED,SAASK,KAAT,GAAiB;AAAA,kBACWZ,QAAQ,CAAC,IAAIa,IAAJ,EAAD,CADnB;AAAA;AAAA,MACRC,KADQ;AAAA,MACDC,QADC;;AAGf,sBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,KAAK,EAAET,IAFT;AAGE,IAAA,YAAY,EAAED,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD;;AAED,eAAeM,KAAf","sourcesContent":["// import React, { Component } from 'react';\n// import Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport \"../style.css\"\n\n//Package documentation found here https://www.npmjs.com/package/react-calendar\n\n\n// class MyApp extends Component {\n//   state = {\n//     date: new Date(),\n//   }\n  \n//   onChange = date => this.setState({ date })\n \n//   render() {\n//     return (\n//       <div className=\"calDiv\">\n//         <Calendar \n//           onChange={this.onChange}\n//           value={this.state.date}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default MyApp\n\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\n\nconst disabledDates = [tomorrow, in3Days, in5Days];\n\nfunction tileDisabled({ date, view }) {\n  // Disable tiles in month view only\n  if (view === 'month') {\n    // Check if a date React-Calendar wants to check is on the list of disabled dates\n    return disabledDates.find(dDate => isSameDay(dDate, date));\n  }\n}\n\nfunction MyApp() {\n  const [value, setValue] = useState(new Date());\n\n  return (\n    <Calendar\n      onChange={onChange}\n      value={date}\n      tileDisabled={tileDisabled}\n    />\n  );\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}